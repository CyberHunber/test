name: Build

on:
  push:
    branches:
      - master
    tags:
      - "v*.*.*"

jobs:
  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        arch: [x86_64]
    steps:
      - name: Check runner architecture
        id: check-arch
        shell: bash
        run: |
          echo "Runner OS: $RUNNER_OS"
          echo "Runner architecture: $RUNNER_ARCH"

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        id: pnpm-install
        with:
          version: 9
          run_install: false

      - name: Get pnpm store path
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-${{ matrix.arch }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.arch }}-pnpm-store-

      - name: Setup Python 3 environment
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Initialize build environment
        run: pnpm run init

      - name: Start build
        run: pnpm run build

      - name: List build artifacts before renaming
        shell: bash
        run: |
          echo "Files before renaming:"
          ls -l build/

      - name: Rename build artifacts to include architecture
        shell: bash
        run: |
          ARCH="${{ matrix.arch }}"
          for file in build/*-*_*.*; do
            # 检查文件是否存在
            if [ -f "$file" ]; then
              # 提取文件名和扩展名
              filename=$(basename "$file")
              extension="${filename##*.}"
              filename="${filename%.*}"
              # 重命名文件，添加架构信息
              new_filename="${filename}_${ARCH}.${extension}"
              mv "$file" "build/${new_filename}"
            fi
          done

      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          token: ${{ env.MY_TOKEN }}
          files: build/*-*_*_*.*
          draft: false
          prerelease: false
        env:
          MY_TOKEN: ${{ secrets.MY_PERSONAL_ACCESS_TOKEN }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Setup_${{ runner.os }}_${{ matrix.arch }}
          retention-days: 1
          path: build/*-*_*_*.*

  build-macos-x86_64:
    runs-on: macos-13
    strategy:
      matrix:
        arch: [x86_64]
    steps:
      - name: Check runner architecture
        id: check-arch
        shell: bash
        run: |
          echo "Runner OS: $RUNNER_OS"
          echo "Runner architecture: $RUNNER_ARCH"

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        id: pnpm-install
        with:
          version: 9
          run_install: false

      - name: Get pnpm store path
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-${{ matrix.arch }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.arch }}-pnpm-store-

      - name: Setup Python 3 environment
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Initialize build environment
        run: pnpm run init

      - name: Start build
        run: pnpm run build

      - name: List build artifacts before renaming
        shell: bash
        run: |
          echo "Files before renaming:"
          ls -l build/

      - name: Rename build artifacts to include architecture
        shell: bash
        run: |
          ARCH="${{ matrix.arch }}"
          for file in build/*-*_*.*; do
            # 检查文件是否存在
            if [ -f "$file" ]; then
              # 提取文件名和扩展名
              filename=$(basename "$file")
              extension="${filename##*.}"
              filename="${filename%.*}"
              # 重命名文件，添加架构信息
              new_filename="${filename}_${ARCH}.${extension}"
              mv "$file" "build/${new_filename}"
            fi
          done

      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          token: ${{ env.MY_TOKEN }}
          files: build/*-*_*_*.*
          draft: false
          prerelease: false
        env:
          MY_TOKEN: ${{ secrets.MY_PERSONAL_ACCESS_TOKEN }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Setup_${{ runner.os }}_${{ matrix.arch }}
          retention-days: 1
          path: build/*-*_*_*.*

  build-macos-arm64:
    runs-on: macos-latest
    strategy:
      matrix:
        arch: [arm64 ]
    steps:
      - name: Check runner architecture
        id: check-arch
        shell: bash
        run: |
          echo "Runner OS: $RUNNER_OS"
          echo "Runner architecture: $RUNNER_ARCH"

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        id: pnpm-install
        with:
          version: 9
          run_install: false

      - name: Get pnpm store path
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-${{ matrix.arch }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.arch }}-pnpm-store-

      - name: Setup Python 3 environment
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Initialize build environment
        run: pnpm run init

      - name: Start build
        run: pnpm run build

      - name: List build artifacts before renaming
        shell: bash
        run: |
          echo "Files before renaming:"
          ls -l build/

      - name: Rename build artifacts to include architecture
        shell: bash
        run: |
          ARCH="${{ matrix.arch }}"
          for file in build/*-*_*.*; do
            # 检查文件是否存在
            if [ -f "$file" ]; then
              # 提取文件名和扩展名
              filename=$(basename "$file")
              extension="${filename##*.}"
              filename="${filename%.*}"
              # 重命名文件，添加架构信息
              new_filename="${filename}_${ARCH}.${extension}"
              mv "$file" "build/${new_filename}"
            fi
          done

      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          token: ${{ env.MY_TOKEN }}
          files: build/*-*_*_*.*
          draft: false
          prerelease: false
        env:
          MY_TOKEN: ${{ secrets.MY_PERSONAL_ACCESS_TOKEN }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Setup_${{ runner.os }}_${{ matrix.arch }}
          retention-days: 1
          path: build/*-*_*_*.*

  build-linux-x86_64:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [x86_64]
    steps:
      - name: Check runner architecture
        id: check-arch
        shell: bash
        run: |
          echo "Runner OS: $RUNNER_OS"
          echo "Runner architecture: $RUNNER_ARCH"
          
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        id: pnpm-install
        with:
          version: 9
          run_install: false

      - name: Get pnpm store path
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-${{ matrix.arch }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.arch }}-pnpm-store-

      - name: Setup Python 3 environment
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Initialize build environment
        run: pnpm run init

      - name: Start build
        run: pnpm run build

      - name: List build artifacts before renaming
        shell: bash
        run: |
          echo "Files before renaming:"
          ls -l build/

      - name: Rename build artifacts to include architecture
        shell: bash
        run: |
          ARCH="${{ matrix.arch }}"
          for file in build/*-*_*.*; do
            # 检查文件是否存在
            if [ -f "$file" ]; then
              # 提取文件名和扩展名
              filename=$(basename "$file")
              extension="${filename##*.}"
              filename="${filename%.*}"
              # 重命名文件，添加架构信息
              new_filename="${filename}_${ARCH}.${extension}"
              mv "$file" "build/${new_filename}"
            fi
          done

      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          token: ${{ env.MY_TOKEN }}
          files: build/*-*_*_*.*
          draft: false
          prerelease: false
        env:
          MY_TOKEN: ${{ secrets.MY_PERSONAL_ACCESS_TOKEN }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Setup_${{ runner.os }}_${{ matrix.arch }}
          retention-days: 1
          path: build/*-*_*_*.*

  build-linux-arm64:
    runs-on: ubuntu-24.04-arm
    strategy:
      matrix:
        arch: [arm64]
    steps:
      - name: Check runner architecture
        id: check-arch
        shell: bash
        run: |
          echo "Runner OS: $RUNNER_OS"
          echo "Runner architecture: $RUNNER_ARCH"

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        id: pnpm-install
        with:
          version: 9
          run_install: false

      - name: Get pnpm store path
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-${{ matrix.arch }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.arch }}-pnpm-store-
      

      - name: Setup Python 3 environment
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Initialize build environment
        run: pnpm run init

      - name: Start build
        run: pnpm run build

      - name: List build artifacts before renaming
        shell: bash
        run: |
          echo "Files before renaming:"
          ls -l build/

      - name: Rename build artifacts to include architecture
        shell: bash
        run: |
          ARCH="${{ matrix.arch }}"
          for file in build/*-*_*.*; do
            # 检查文件是否存在
            if [ -f "$file" ]; then
              # 提取文件名和扩展名
              filename=$(basename "$file")
              extension="${filename##*.}"
              filename="${filename%.*}"
              # 重命名文件，添加架构信息
              new_filename="${filename}_${ARCH}.${extension}"
              mv "$file" "build/${new_filename}"
            fi
          done

      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          token: ${{ env.MY_TOKEN }}
          files: build/*-*_*_*.*
          draft: false
          prerelease: false
        env:
          MY_TOKEN: ${{ secrets.MY_PERSONAL_ACCESS_TOKEN }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Setup_${{ runner.os }}_${{ matrix.arch }}
          retention-days: 1
          path: build/*-*_*_*.*
